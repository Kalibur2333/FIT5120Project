@model FIT5120Project.Models.ShoppingImpactViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("CalculateImpact", "ShoppingImpact", FormMethod.Post))
{<div id="default-carousel" class="relative w-full overflow-hidden" data-carousel="static">
    <!-- Slider indicators -->
    
    <!-- Carousel wrapper -->
    <div class="relative h-[90vh] overflow-hidden md:h-[90vh]">
        <!-- Item 1 -->
        <section class="carousel-item">
            <div class="flex flex-row mt-3 items-start justify-between">
                 <div class="flex-1 max-w-screen-lg mt-10 ms-20">
                    <p class="mb-4 text-3xl font-bold text-black md:text-3xl">Ever wonder how your clothing shopping habits impact the environment?</p>
                    <p class="mb-8 text-btn text-lg font-normal lg:text-3xl">With just six questions, inspired by insights from thredUP, our Fashion Footprint Calculator will reveal your personal fashion impact!</p>
                    <div class="flex">
                        <button type="button" class="carousel-next focus:outline-none text-white bg-btn hover:bg-btnOn focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-3xl px-5 py-3 mt-5 mb-2">
                            START
                        </button>
                    </div>
                </div>
                <div class="flex-1 flex justify-end">
                    <img class="w-full h-auto max-w-2xl" src="~/Content/images/Qs.png" alt="">
                </div>
            </div>
        </section>
        <!-- Item 2 -->
        <section class="carousel-item hidden">
            <div class="flex justify-center mt-3">
                <div class="w-1/2 max-w-screen-lg mt-10 ms-20">
                    <div class="flex">
                        <div class="flex mb-5">
                            <div class="indicator active bg-btnOn w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                        </div>
                        <div><p class="text-btn mx-3 text-lg mt-[-10px]">1/6</p></div>
                    </div>

                    <p class="mb-4 text-3xl font-bold text-black md:text-3xl">@Html.LabelFor(m => m.ShopQuantityMonth, "How many items of clothing do you buy in a month?") </p>
                    <br />
                    <div class="mb-8 relative mb-6 w-[60vh]">
                        <label for="ShopQuantityMonth" class="block mb-2 text-sm font-medium text-btn">Shop Quantity</label>
                        <span id="rangeValue1" class="text-md font-bold text-btn end-0 -top-5">
                            @Model.ShopQuantityMonth
                        </span>
                        <input type="range" id="large-range1" name="ShopQuantityMonth"
                               value="@Model.ShopQuantityMonth"
                               min="0" max="10" step="1"
                               class="w-[60vh] h-2 bg-gradient-to-r from-btnOn to-gray-400 rounded-lg appearance-none cursor-pointer">
                        <span class="text-sm text-btn absolute start-0 -bottom-6">0</span>
                        <span class="text-sm text-btn absolute start-1/2 -translate-x-1/2 rtl:translate-x-1/2 -bottom-6">5</span>
                        <span class="text-sm text-btn absolute end-0 -bottom-6">10</span>
                        @Html.ValidationMessageFor(m => m.ShopQuantityMonth)
                    </div>
                    
                    <div class="flex">
                        <button type="button" class="carousel-prev text-btn hover:text-white border border-btn hover:bg-btnOn ring-2 ring-btn font-medium rounded-full text-2xl px-4 py-2 ms-5 me-2 mt-5 mb-2">
                            BACK
                        </button>
                        <button type="button" class="carousel-next focus:outline-none text-white bg-btn hover:bg-btnOn ring-2 ring-green-300 font-medium rounded-full text-2xl px-4 py-2 ms-5 me-2 mt-5 mb-2">
                            NEXT
                        </button>
                    </div>
                </div>
                <div class="w-1/2 flex justify-end">
                    <img class="w-full h-auto lg:max-w-2xl md:max-w-lg" src="~/Content/images/Q1.png" alt="">
                </div>
            </div>
        </section>
        <!-- Item 3 -->
        <section class="carousel-item hidden">
            <div class="flex justify-center mt-3">
                <div class="w-1/2 max-w-screen-lg mt-10 ms-20">
                    <div class="flex">
                        <div class="flex mb-5">
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator active bg-btnOn w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                        </div>
                        <div><p class="text-btn mx-3 text-lg mt-[-10px]">2/6</p></div>
                    </div>
                    <p class="mb-4 text-3xl font-bold text-black md:text-3xl">
                        @Html.LabelFor(m => m.OnlineQuantity, "How many times do you do online shopping in a month?")
                    </p>
                    <br />
                    <div class="mb-8 relative mb-6 w-[60vh]">
                        <label for="online-quantity" class="block mb-2 text-sm font-medium text-btn">Online Quantity</label>
                        <span id="rangeValue2" class="text-md font-bold text-btn end-0 -top-5">
                            @Model.OnlineQuantity
                        </span>
                        <input type="range" id="large-range2" name="OnlineQuantity"
                               value="@Model.OnlineQuantity"
                               min="0" max="10" step="1"
                               class="w-[60vh] h-2 bg-gradient-to-r from-btnOn to-gray-400 rounded-lg appearance-none cursor-pointer">
                        <span class="text-sm text-btn absolute start-0 -bottom-6">0</span>
                        <span class="text-sm text-btn absolute start-1/2 -translate-x-1/2 rtl:translate-x-1/2 -bottom-6">5</span>
                        <span class="text-sm text-btn absolute end-0 -bottom-6">10</span>
                        @Html.ValidationMessageFor(m => m.OnlineQuantity)
                    </div>

                    <div class="flex">
                        <button type="button" class="carousel-prev text-btn hover:text-white border border-btn hover:bg-btnOn ring-2 ring-btn font-medium rounded-full text-2xl px-4 py-2 ms-5 me-2 mt-5 mb-2">
                            BACK
                        </button>
                        <button type="button" class="carousel-next focus:outline-none text-white bg-btn hover:bg-btnOn ring-2 ring-green-300 font-medium rounded-full text-2xl px-4 py-2 ms-5 me-2 mt-5 mb-2">
                            NEXT
                        </button>
                    </div>
                </div>
                <div class="w-1/2 flex justify-end">
                    <img class="w-full h-auto lg:max-w-2xl md:max-w-xl" src="~/Content/images/Q2.png" alt="">
                </div>
            </div>
        </section>
        <!-- Item 4 -->
        <section class="carousel-item hidden">
            <div class="flex justify-center mt-3">
                <div class="w-1/2 max-w-screen-lg mt-10 ms-20">
                    <div class="flex">
                        <div class="flex mb-5">
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>                            
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator active bg-btnOn w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                        </div>
                        <div><p class="text-btn mx-3 text-lg mt-[-10px]">3/6</p></div>
                    </div>
                    <p class="mb-4 text-3xl font-bold text-black md:text-3xl">
                        @Html.LabelFor(m => m.ReturnPercOnline, "What percentage of your online shopping purchases do you typically return?")
                    </p>
                    <br />
                    <div class="mb-8 relative mb-6 w-[60vh]">
                        <label for="ReturnPercOnline" class="block mb-2 text-sm font-medium text-btn">Return Percentage Online</label>
                        <span id="rangeValue3" class="text-md font-bold text-btn end-0 -top-5">
                            @Model.ReturnPercOnline
                        </span>
                        <input type="range" id="large-range3" name="ReturnPercOnline"
                               value="@Model.ReturnPercOnline"
                               min="0" max="100" step="1"
                               class="w-[60vh] h-2 bg-gradient-to-r from-btnOn to-gray-400 rounded-lg appearance-none cursor-pointer">
                        <span class="text-sm text-btn absolute start-0 -bottom-6">0%</span>
                        <span class="text-sm text-btn absolute start-1/3 -translate-x-1/2 rtl:translate-x-1/2 -bottom-6">25%</span>
                        <span class="text-sm text-btn absolute start-2/3 -translate-x-1/2 rtl:translate-x-1/2 -bottom-6">75%</span>
                        <span class="text-sm text-btn absolute end-0 -bottom-6">100%</span>
                        @Html.ValidationMessageFor(m => m.ReturnPercOnline)
                    </div>
                    <div class="flex">
                        <button type="button" class="carousel-prev text-btn hover:text-white border border-btn hover:bg-btnOn ring-2 ring-btn font-medium rounded-full text-2xl px-4 py-2 ms-5 me-2 mt-5 mb-2">
                            BACK
                        </button>
                        <button type="button" class="carousel-next focus:outline-none text-white bg-btn hover:bg-btnOn ring-2 ring-green-300 font-medium rounded-full text-2xl px-4 py-2 ms-5 me-2 mt-5 mb-2">
                            NEXT
                        </button>
                    </div>
                </div>
                <div class="w-1/2 flex justify-end">
                    <img class="w-full h-auto lg:max-w-2xl md:max-w-xl" src="~/Content/images/Q3.png" alt="">
                </div>
            </div>
        </section>
        <!-- Item 5 -->
        <section class="carousel-item hidden">
            <div class="flex justify-center mt-3">
                <div class="w-1/2 max-w-screen-lg mt-10 ms-20">
                    <div class="flex">
                        <div class="flex mb-5">
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>                            
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator active bg-btnOn w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                        </div>
                        <div><p class="text-btn mx-3 text-lg mt-[-10px]">4/6</p></div>
                    </div>
                    <p class="mb-4 text-3xl font-bold text-black md:text-3xl">
                        @Html.LabelFor(m => m.InstoreQuantity, "How many times do you shop in-store in a month?")
                    </p>
                    <br />
                    <div class="mb-8 relative mb-6 w-[60vh]">
                        <label for="InstoreQuantity" class="block mb-2 text-sm font-medium text-btn">Instore Shopping</label>
                        <span id="rangeValue4" class="text-md font-bold text-btn end-0 -top-5">
                            @Model.InstoreQuantity
                        </span>
                        <input type="range" id="large-range4" name="InstoreQuantity"
                               value="@Model.InstoreQuantity"
                               min="0" max="10" step="1"
                               class="w-[60vh] h-2 bg-gradient-to-r from-btnOn to-gray-400 rounded-lg appearance-none cursor-pointer">
                        <span class="text-sm text-btn absolute start-0 -bottom-6">0</span>
                        <span class="text-sm text-btn absolute start-1/2 -translate-x-1/2 rtl:translate-x-1/2 -bottom-6">5</span>
                        <span class="text-sm text-btn absolute end-0 -bottom-6">10</span>
                        @Html.ValidationMessageFor(m => m.InstoreQuantity)
                    </div>
                    <div class="flex">
                        <button type="button" class="carousel-prev text-btn hover:text-white border border-btn hover:bg-btnOn ring-2 ring-btn font-medium rounded-full text-2xl px-4 py-2 ms-5 me-2 mt-5 mb-2">
                            BACK
                        </button>
                        <button type="button" class="carousel-next focus:outline-none text-white bg-btn hover:bg-btnOn ring-2 ring-green-300 font-medium rounded-full text-2xl px-4 py-2 ms-5 me-2 mt-5 mb-2">
                            NEXT
                        </button>
                    </div>
                </div>
                <div class="w-1/2 flex justify-end">
                    <img class="w-full h-auto lg:max-w-2xl md:max-w-xl" src="~/Content/images/Q4.png" alt="">
                </div>
            </div>
        </section>
        <!-- Item 6 -->
        <section class="carousel-item hidden">
            <div class="flex justify-center mt-3">
                <div class="w-1/2 max-w-screen-lg mt-10 ms-20">
                    <div class="flex">
                        <div class="flex mb-5">
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>                            
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator active bg-btnOn w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                        </div>
                        <div><p class="text-btn mx-3 text-lg mt-[-10px]">5/6</p></div>
                    </div>
                    <p class="mb-4 text-3xl font-bold text-black md:text-3xl">
                        @Html.LabelFor(m => m.ReturnPercInstore, "What percentage of your in-store purchases do you typically return?")
                    </p>
                    <br />
                    <div class="mb-8 relative mb-6 w-[60vh]">
                        <label for="ReturnPercInstore" class="block mb-2 text-sm font-medium text-btn">Return Percentage Instore</label>
                        <span id="rangeValue5" class="text-md font-bold text-btn end-0 -top-5">
                            @Model.ReturnPercInstore
                        </span>
                        <input type="range" id="large-range5" name="ReturnPercInstore"
                               value="@Model.ReturnPercInstore"
                               min="0" max="100" step="1"
                               class="w-[60vh] h-2 bg-gradient-to-r from-btnOn to-gray-400 rounded-lg appearance-none cursor-pointer">
                        <span class="text-sm text-btn absolute start-0 -bottom-6">0%</span>
                        <span class="text-sm text-btn absolute start-1/3 -translate-x-1/2 rtl:translate-x-1/2 -bottom-6">25%</span>
                        <span class="text-sm text-btn absolute start-2/3 -translate-x-1/2 rtl:translate-x-1/2 -bottom-6">75%</span>
                        <span class="text-sm text-btn absolute end-0 -bottom-6">100%</span>
                        @Html.ValidationMessageFor(m => m.ReturnPercInstore)
                    </div>
                    <div class="flex">
                        <button type="button" class="carousel-prev text-btn hover:text-white border border-btn hover:bg-btnOn ring-2 ring-btn font-medium rounded-full text-2xl px-4 py-2 ms-5 me-2 mt-5 mb-2">
                            BACK
                        </button>
                        <button type="button" class="carousel-next focus:outline-none text-white bg-btn hover:bg-btnOn ring-2 ring-green-300 font-medium rounded-full text-2xl px-4 py-2 ms-5 me-2 mt-5 mb-2">
                            NEXT
                        </button>
                    </div>
                </div>
                <div class="w-1/2 flex justify-end">
                    <img class="w-full h-auto lg:max-w-2xl md:max-w-xl" src="~/Content/images/Q5.png" alt="">
                </div>
            </div>
        </section>
        <!-- Item 7 -->
        <section class="carousel-item hidden">
            <div class="flex justify-center mt-3">
                <div class="w-1/2 max-w-screen-lg mt-10 ms-20">
                    <div class="flex">
                        <div class="flex mb-5">
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>                           
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator bg-gray-300 w-3 h-3 rounded-full mx-2"></div>
                            <div class="indicator active bg-btnOn w-3 h-3 rounded-full mx-2"></div>
                        </div>
                        <div><p class="text-btn mx-3 text-lg mt-[-10px]">6/6</p></div>
                    </div>
                    <p class="mb-4 text-3xl font-bold text-black md:text-3xl">
                        @Html.LabelFor(m => m.LandfillPerc, "What percentage of your unwanted clothing goes to a landfill?")
                    </p>
                    <br />
                    <div class="mb-8 relative mb-6 w-[60vh]">
                        <label for="LandfillPerc" class="block mb-2 text-sm font-medium text-btn">Landfill Percentage</label>
                        <span id="rangeValue6" class="text-md font-bold text-btn end-0 -top-5">
                            @Model.LandfillPerc
                        </span>
                        <input type="range" id="large-range6" name="LandfillPerc"
                               value="@Model.LandfillPerc"
                               min="0" max="100" step="1"
                               class="w-[60vh] h-2 bg-gradient-to-r from-btnOn to-gray-400 rounded-lg appearance-none cursor-pointer">
                        <span class="text-sm text-btn absolute start-0 -bottom-6">0%</span>
                        <span class="text-sm text-btn absolute start-1/3 -translate-x-1/2 rtl:translate-x-1/2 -bottom-6">25%</span>
                        <span class="text-sm text-btn absolute start-2/3 -translate-x-1/2 rtl:translate-x-1/2 -bottom-6">75%</span>
                        <span class="text-sm text-btn absolute end-0 -bottom-6">100%</span>
                        @Html.ValidationMessageFor(m => m.LandfillPerc)
                    </div>
                    <div class="flex">
                        <button type="button" class="carousel-prev text-btn hover:text-white border border-btn hover:bg-btnOn ring-2 ring-btn font-medium rounded-full text-2xl px-4 py-2 ms-5 me-2 mt-5 mb-2">
                            BACK
                        </button>
                        <button type="submit" class="carousel-next focus:outline-none text-white bg-btn hover:bg-btnOn ring-2 ring-green-300 font-medium rounded-full text-2xl px-4 py-2 ms-5 me-2 mt-5 mb-2">
                            SHOW IMPACT
                        </button>
                    </div>
                </div>
                <div class="w-1/2 flex justify-end">
                    <img class="w-full h-auto lg:max-w-2xl md:max-w-xl" src="~/Content/images/Q6.png" alt="">
                </div>
            </div>
        </section>
    </div>
</div>
}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const slides = document.querySelectorAll('.carousel-item');
        const nextButtons = document.querySelectorAll('.carousel-next');
        const prevButtons = document.querySelectorAll('.carousel-prev');
        const indicators = document.querySelectorAll('.indicator');

        let currentSlide = 0;

        function showSlide(index) {
            slides.forEach((slide, idx) => {
                slide.style.display = idx === index ? 'block' : 'none'; // Show only the active slide
            });
            
        }

        nextButtons.forEach(button => {
            button.addEventListener('click', () => {
                if (currentSlide < slides.length - 1) {
                    currentSlide += 1; // Move to the next slide
                    showSlide(currentSlide);
                }
            });
        });

        prevButtons.forEach(button => {
            button.addEventListener('click', () => {
                if (currentSlide > 0) {
                    currentSlide -= 1; // Move to the previous slide
                    showSlide(currentSlide);
                }
            });
        });      

        showSlide(currentSlide); // Initialize the carousel by showing the first slide
    });

    document.addEventListener("DOMContentLoaded", function () {
        const slider1 = document.getElementById('large-range1');
        const rangeValue1 = document.getElementById('rangeValue1');

        slider1.oninput = function () {
            rangeValue1.textContent = this.value;
            // Adjust the position of the displayed value
            const percentage = ((this.value - this.min) / (this.max - this.min)) * 100;
            rangeValue1.style.left = `calc(${percentage}% - 14px)`; // Adjust the -14px for better centering
        };

        const slider2 = document.getElementById('large-range2');
        const rangeValue2 = document.getElementById('rangeValue2');

        slider2.oninput = function () {
            rangeValue2.textContent = this.value;
            // Adjust the position of the displayed value
            const percentage = ((this.value - this.min) / (this.max - this.min)) * 100;
            rangeValue2.style.left = `calc(${percentage}% - 14px)`; // Adjust the -14px for better centering
        }

        const slider3 = document.getElementById('large-range3');
        const rangeValue3 = document.getElementById('rangeValue3');

        slider3.oninput = function () {
            rangeValue3.textContent = this.value;
            // Adjust the position of the displayed value
            const percentage = ((this.value - this.min) / (this.max - this.min)) * 100;
            rangeValue3.style.left = `calc(${percentage}% - 14px)`; // Adjust the -14px for better centering
        }

        const slider4 = document.getElementById('large-range4');
        const rangeValue4 = document.getElementById('rangeValue4');

        slider4.oninput = function () {
            rangeValue4.textContent = this.value;
            // Adjust the position of the displayed value
            const percentage = ((this.value - this.min) / (this.max - this.min)) * 100;
            rangeValue4.style.left = `calc(${percentage}% - 14px)`; // Adjust the -14px for better centering
        }

        const slider5 = document.getElementById('large-range5');
        const rangeValue5 = document.getElementById('rangeValue5');

        slider5.oninput = function () {
            rangeValue5.textContent = this.value;
            // Adjust the position of the displayed value
            const percentage = ((this.value - this.min) / (this.max - this.min)) * 100;
            rangeValue5.style.left = `calc(${percentage}% - 14px)`; // Adjust the -14px for better centering
        }

        const slider6 = document.getElementById('large-range6');
        const rangeValue6 = document.getElementById('rangeValue6');

        slider6.oninput = function () {
            rangeValue6.textContent = this.value;
            // Adjust the position of the displayed value
            const percentage = ((this.value - this.min) / (this.max - this.min)) * 100;
            rangeValue6.style.left = `calc(${percentage}% - 14px)`; // Adjust the -14px for better centering
        }
    });
</script>    






